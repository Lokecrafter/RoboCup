//Robot 2 with protected lights
//int blackAdd = 25;
//int whiteValues[] = {160, 167, 159, 165, 151, 155, 194, 161, 170, 198};
//int blackValues[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
//int whiteValues[] = {251, 229, 206, 198, 190, 191, 235, 207, 225, 277};
//int blackValues[] = {293, 261, 228, 214, 205, 207, 268, 264, 320, 403};
//int whiteValues[] = {251, 229, 206, 198, 190, 191, 235, 207, 225, 277};
//int blackValues[] = {293, 261, 228, 214, 205, 207, 268, 237, 250, 300};
//int whiteValues[] = {251, 229, 206, 198, 190, 191, 235, 207, 225, 277};
//int blackValues[] = {270, 261, 235, 220, 210, 207, 258, 237, 250, 300};

//int whiteValues[] = {251, 229, 206, 198, 190, 191, 235, 207, 225, 277};
//int blackValues[] = {290, 261, 235, 220, 210, 207, 258, 247, 260, 310};


void left(){
	float a = (OFFSETANGLE * PI / 180);
	VectorP direction = VectorP(0, 1);
	Vector2 vect = Vector2(0, 0);

	direction.angle = PI - a;

	vect = direction * -1;
	mtrCtrl.drive(vect, 0.15);
	delay(700);

    mtrCtrl.drive(vect, 0); //Stops robot
	delay(100);
}
void right(){
	float a = (OFFSETANGLE * PI / 180);
	VectorP direction = VectorP(0, 1);
	Vector2 vect = Vector2(0, 0);

	direction.angle = 0 - a;

	vect = direction * -1;
	mtrCtrl.drive(vect, 0.15);
	delay(1000);

    mtrCtrl.drive(vect, 0); //Stops robot
	delay(100);
}
void forward(int time){
	float a = ((OFFSETANGLE + 5) * PI / 180);
	VectorP direction = VectorP(0, 1);
	Vector2 vect = Vector2(0, 0);

	direction.angle = PI * 0.5 - a;

	vect = direction * -1;
	mtrCtrl.drive(vect, 0.15);
	delay(time);

    mtrCtrl.drive(vect, 0); //Stops robot
	delay(100);
}

void goAround(){
	Vector2 vect = Vector2(0, 1);
    mtrCtrl.drive(vect, 0.15); //Stops robot
	delay(400);

	left();
	forward(1400);
	right();
	forward(3000);
	right();
	forward(1500);
	left();

	vect = Vector2(0,0);
    mtrCtrl.drive(vect, 0); //Stops robot

	delay(500);
}